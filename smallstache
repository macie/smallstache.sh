#!/bin/sh
#
# smallstache - logic-less template engine for shell.
# <https://github.com/macie/smallstache.sh>
#
# Copyright (c) 2023 Maciej Å»ok
# SPDX-License-Identifier: MIT


# following line is used by `make cli-release`
smallstache_version=24.1

smallstache_verbosity_level=0

# parse flags
for arg in "$@"; do
	case "$arg" in
		-h|--help)
			if [ "$#" -gt 1 ]; then
				echo 'smallstache: invalid arguments. See "smallstache -h" for help' >&2
				exit 64
			fi
			cat >&2 <<-'EOF'
				smallstache - logic-less template engine for shell.

				Usage:
				   smallstache [options] TEMPLATE_FILE
				   smallstache [-h | --help] [-v | --version]

				Options:
				   -h, --help             Show this help and exit.
				   -v, --version          Show version number and exit.
				   --verbose              Print debugging messages.

				Value from stdin KEY=VALUE pairs substitutes `{{KEY}}` in TEMPLATE_FILE.
				EOF
			exit 0
			;;
		-v|--version)
			if [ "$#" -gt 1 ]; then
				echo 'smallstache: invalid arguments. See "smallstache -h" for help' >&2
				exit 64
			fi
			printf 'smallstache %s\n' "${smallstache_version}" >&2
			exit 0
			;;
		--verbose)
			smallstache_verbosity_level=1
			shift
			;;
		-*)
			echo 'smallstache: unknown option. See "smallstache -h" for help' >&2
			exit 64
			;;
	esac
done

# validate template
case "$#" in
	0)
		echo 'smallstache: no template provided. See "smallstache -h" for help' >&2
		exit 64
		;;
	1)
		if [ ! -e "$1" ]; then
			printf 'smallstache: file %s does not exist\n' "$1" >&2
			exit 64
		fi
		if [ ! -f "$1" ] && [ ! -c "$1" ]; then
			printf 'smallstache: %s is not a file' "$1" >&2
			exit 64
		fi
		;;
	*)
		echo 'smallstache: too many arguments. See "smallstache -h" for help' >&2
		exit 64
		;;
esac

# transform each stdin line in form `KEY=VALUE` into `s|{{ *KEY *}}|VALUE|g; `
smallstache_regex=$(sed 's_\([^=]*\)=\(.*\)_s|{{ *\1 *}}|\2|g; _g')
if [ "${smallstache_verbosity_level}" -gt 0 ]; then
	echo '# Sed commands to be used on template file' >&2
	echo "${smallstache_regex}" >&2 
fi

sed -e "${smallstache_regex}" "$1"
